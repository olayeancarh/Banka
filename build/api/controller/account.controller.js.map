{"version":3,"sources":["../../../src/api/controller/account.controller.js"],"names":["AccountController","addAnAccount","req","res","newAccount","body","createdAccount","AccountService","addNewAccount","json","status","data","updateAnAccount","oldAccount","accountNumber","params","accountInDb","dummyData","accounts","find","acc","updatedAccount","deleteAnAccount","message"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,iBAAiB,GAAG;AACxBC,EAAAA,YADwB,wBACXC,GADW,EACNC,GADM,EACD;AACrB,QAAMC,UAAU,GAAGF,GAAG,CAACG,IAAvB;;AACA,QAAMC,cAAc,GAAGC,oBAAeC,aAAf,CAA6BJ,UAA7B,CAAvB;;AACA,WAAOD,GAAG,CAACM,IAAJ,CAAS;AACdC,MAAAA,MAAM,EAAE,GADM;AAEdC,MAAAA,IAAI,EAAEL;AAFQ,KAAT,CAAP;AAID,GARuB;AAUxBM,EAAAA,eAVwB,2BAURV,GAVQ,EAUHC,GAVG,EAUE;AACxB,QAAMU,UAAU,GAAGX,GAAG,CAACG,IAAvB;AADwB,QAEhBS,aAFgB,GAEEZ,GAAG,CAACa,MAFN,CAEhBD,aAFgB;;AAGxB,QAAME,WAAW,GAAGC,sBAAUC,QAAV,CAAmBC,IAAnB,CAAwB,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACN,aAAJ,KAAsBA,aAA1B;AAAA,KAA3B,CAApB;;AACA,QAAI,CAACE,WAAL,EAAkB;AAChB,aAAOb,GAAG,CAACM,IAAJ,CAAS;AACdC,QAAAA,MAAM,EAAE,GADM;AAEdC,QAAAA,IAAI,EAAE;AAFQ,OAAT,CAAP;AAID;;AACD,QAAMU,cAAc,GAAGd,oBAAeK,eAAf,CAA+BC,UAA/B,EAA2CC,aAA3C,CAAvB;;AACA,WAAOX,GAAG,CAACM,IAAJ,CAAS;AACdC,MAAAA,MAAM,EAAE,GADM;AAEdC,MAAAA,IAAI,EAAEU;AAFQ,KAAT,EAGJX,MAHI,CAGG,GAHH,CAAP;AAID,GAzBuB;AA2BxBY,EAAAA,eA3BwB,2BA2BRpB,GA3BQ,EA2BHC,GA3BG,EA2BE;AAAA,QAChBW,aADgB,GACEZ,GAAG,CAACa,MADN,CAChBD,aADgB;;AAExBP,wBAAee,eAAf,CAA+BR,aAA/B;;AACA,WAAOX,GAAG,CAACM,IAAJ,CAAS;AACdC,MAAAA,MAAM,EAAE,GADM;AAEda,MAAAA,OAAO,EAAE;AAFK,KAAT,EAGJb,MAHI,CAGG,GAHH,CAAP;AAID;AAlCuB,CAA1B;eAqCeV,iB","sourcesContent":["import AccountService from '../services/account.service';\r\nimport dummyData from '../utilz/dummyData';\r\n\r\nconst AccountController = {\r\n  addAnAccount(req, res) {\r\n    const newAccount = req.body;\r\n    const createdAccount = AccountService.addNewAccount(newAccount);\r\n    return res.json({\r\n      status: 201,\r\n      data: createdAccount,\r\n    });\r\n  },\r\n\r\n  updateAnAccount(req, res) {\r\n    const oldAccount = req.body;\r\n    const { accountNumber } = req.params;\r\n    const accountInDb = dummyData.accounts.find(acc => acc.accountNumber === accountNumber);\r\n    if (!accountInDb) {\r\n      return res.json({\r\n        status: 401,\r\n        data: 'The account number does not exist',\r\n      });\r\n    }\r\n    const updatedAccount = AccountService.updateAnAccount(oldAccount, accountNumber);\r\n    return res.json({\r\n      status: 201,\r\n      data: updatedAccount,\r\n    }).status(201);\r\n  },\r\n\r\n  deleteAnAccount(req, res) {\r\n    const { accountNumber } = req.params;\r\n    AccountService.deleteAnAccount(accountNumber);\r\n    return res.json({\r\n      status: 201,\r\n      message: 'Account successfully deleted',\r\n    }).status(201);\r\n  },\r\n};\r\n\r\nexport default AccountController;\r\n"],"file":"account.controller.js"}