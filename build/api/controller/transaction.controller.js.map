{"version":3,"sources":["../../../src/api/controller/transaction.controller.js"],"names":["TransactionController","addATransaction","req","res","newTransaction","body","accountNumber","params","account","dummyData","accounts","find","acct","oldBalance","balance","type","newBalance","amount","json","status","data","createdTransaction","TransactionService","addNewTransaction","AccountService","updateAnAccount"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,qBAAqB,GAAG;AAC5BC,EAAAA,eAD4B,2BACZC,GADY,EACPC,GADO,EACF;AACxB,QAAMC,cAAc,GAAGF,GAAG,CAACG,IAA3B;AADwB,QAEhBC,aAFgB,GAEEJ,GAAG,CAACK,MAFN,CAEhBD,aAFgB;;AAGxB,QAAME,OAAO,GAAGC,sBAAUC,QAAV,CAAmBC,IAAnB,CAAwB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACN,aAAL,KAAuBA,aAA3B;AAAA,KAA5B,CAAhB;;AACAF,IAAAA,cAAc,CAACS,UAAf,GAA4BL,OAAO,CAACM,OAApC;;AACA,QAAIV,cAAc,CAACW,IAAf,KAAwB,QAA5B,EAAsC;AACpCX,MAAAA,cAAc,CAACY,UAAf,GAA4BZ,cAAc,CAACS,UAAf,GAA4BT,cAAc,CAACa,MAAvE;AACD,KAFD,MAEO,IAAIb,cAAc,CAACW,IAAf,KAAwB,OAA5B,EAAqC;AAC1C,UAAIX,cAAc,CAACa,MAAf,GAAwBb,cAAc,CAACS,UAA3C,EAAuD;AACrD,eAAOV,GAAG,CAACe,IAAJ,CAAS;AACdC,UAAAA,MAAM,EAAE,GADM;AAEdC,UAAAA,IAAI,EAAE;AAFQ,SAAT,CAAP;AAID;;AACDhB,MAAAA,cAAc,CAACY,UAAf,GAA4BZ,cAAc,CAACS,UAAf,GAA4BT,cAAc,CAACa,MAAvE;AACD;;AACDT,IAAAA,OAAO,CAACM,OAAR,GAAkBV,cAAc,CAACY,UAAjC;;AACA,QAAMK,kBAAkB,GAAGC,wBAAmBC,iBAAnB,CAAqCnB,cAArC,CAA3B;;AACAoB,wBAAeC,eAAf,CAA+BjB,OAA/B,EAAwCF,aAAxC;;AACA,WAAOH,GAAG,CAACe,IAAJ,CAAS;AACdC,MAAAA,MAAM,EAAE,GADM;AAEdC,MAAAA,IAAI,EAAEC;AAFQ,KAAT,CAAP;AAID;AAxB2B,CAA9B;eA2BerB,qB","sourcesContent":["import TransactionService from '../services/transaction.service';\r\nimport AccountService from '../services/account.service';\r\nimport dummyData from '../utilz/dummyData';\r\n\r\nconst TransactionController = {\r\n  addATransaction(req, res) {\r\n    const newTransaction = req.body;\r\n    const { accountNumber } = req.params;\r\n    const account = dummyData.accounts.find(acct => acct.accountNumber === accountNumber);\r\n    newTransaction.oldBalance = account.balance;\r\n    if (newTransaction.type === 'credit') {\r\n      newTransaction.newBalance = newTransaction.oldBalance + newTransaction.amount;\r\n    } else if (newTransaction.type === 'debit') {\r\n      if (newTransaction.amount > newTransaction.oldBalance) {\r\n        return res.json({\r\n          status: 201,\r\n          data: 'Insufficient funds',\r\n        });\r\n      }\r\n      newTransaction.newBalance = newTransaction.oldBalance - newTransaction.amount;\r\n    }\r\n    account.balance = newTransaction.newBalance;\r\n    const createdTransaction = TransactionService.addNewTransaction(newTransaction);\r\n    AccountService.updateAnAccount(account, accountNumber);\r\n    return res.json({\r\n      status: 201,\r\n      data: createdTransaction,\r\n    });\r\n  },\r\n};\r\n\r\nexport default TransactionController;\r\n"],"file":"transaction.controller.js"}