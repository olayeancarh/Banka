{"version":3,"sources":["../../../src/api/utilz/middleware.js"],"names":["checkToken","req","res","next","bearerHeader","headers","authorization","bearer","split","bearerToken","jwt","verify","config","secret","err","decoded","json","success","message"],"mappings":";;;;;;;AACA;;AACA;;;;AAFA;AAIA,SAASA,UAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoC;AAClC;AACA,MAAMC,YAAY,GAAGH,GAAG,CAACI,OAAJ,CAAYC,aAAjC,CAFkC,CAGlC;;AACA,MAAI,OAAOF,YAAP,KAAwB,WAA5B,EAAyC;AACvC;AACA,QAAMG,MAAM,GAAGH,YAAY,CAACI,KAAb,CAAmB,GAAnB,CAAf,CAFuC,CAGvC;;AACA,QAAMC,WAAW,GAAGF,MAAM,CAAC,CAAD,CAA1B;;AACAG,6BAAIC,MAAJ,CAAWF,WAAX,EAAwBG,mBAAOC,MAA/B,EAAuC,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACvD,UAAID,GAAJ,EAAS;AACP,eAAOZ,GAAG,CAACc,IAAJ,CAAS;AACdC,UAAAA,OAAO,EAAE,KADK;AAEdC,UAAAA,OAAO,+BAAwBJ,GAAxB;AAFO,SAAT,CAAP;AAID;;AACDb,MAAAA,GAAG,CAACc,OAAJ,GAAcA,OAAd;AACAZ,MAAAA,IAAI;AACL,KATD;AAUD,GAfD,MAeO;AACL,WAAOD,GAAG,CAACc,IAAJ,CAAS;AACdC,MAAAA,OAAO,EAAE,KADK;AAEdC,MAAAA,OAAO,EAAE;AAFK,KAAT,CAAP;AAID;AACF;;eAEc;AACblB,EAAAA,UAAU,EAAVA;AADa,C","sourcesContent":["/* eslint-disable consistent-return */\r\nimport jwt from 'jsonwebtoken';\r\nimport config from './config';\r\n\r\nfunction checkToken(req, res, next) {\r\n  // Get auth header value\r\n  const bearerHeader = req.headers.authorization;\r\n  // Check if bearer is undefined\r\n  if (typeof bearerHeader !== 'undefined') {\r\n    // Split at the space\r\n    const bearer = bearerHeader.split(' ');\r\n    // Get token from array\r\n    const bearerToken = bearer[1];\r\n    jwt.verify(bearerToken, config.secret, (err, decoded) => {\r\n      if (err) {\r\n        return res.json({\r\n          success: false,\r\n          message: `Token is not valid ${err}`,\r\n        });\r\n      }\r\n      req.decoded = decoded;\r\n      next();\r\n    });\r\n  } else {\r\n    return res.json({\r\n      success: false,\r\n      message: 'Auth token is not supplied',\r\n    });\r\n  }\r\n}\r\n\r\nexport default {\r\n  checkToken,\r\n};\r\n"],"file":"middleware.js"}