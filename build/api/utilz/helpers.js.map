{"version":3,"sources":["../../../src/api/utilz/helpers.js"],"names":["Helper","password","bcrypt","hashSync","genSaltSync","hashPassword","compareSync","id","jwt","sign","config","secret","expiresIn"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;;;;;;;IAEMA,M;;;;;;;;;;AACJ;;;;;iCAKoBC,Q,EAAU;AAC5B,aAAOC,mBAAOC,QAAP,CAAgBF,QAAhB,EAA0BC,mBAAOE,WAAP,CAAmB,CAAnB,CAA1B,CAAP;AACD;AACD;;;;;;;;;oCAOuBC,Y,EAAcJ,Q,EAAU;AAC7C,aAAOC,mBAAOI,WAAP,CAAmBL,QAAnB,EAA6BI,YAA7B,CAAP;AACD;AAED;;;;;;;;kCAKqBE,E,EAAI;AACvB,aAAOC,yBAAIC,IAAJ,CAAS;AAAEF,QAAAA,EAAE,EAAFA;AAAF,OAAT,EAAiBG,mBAAOC,MAAxB,EAAgC;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAhC,CAAP;AACD;;;;;;eAGYZ,M","sourcesContent":["// src/usingDB/controllers/Helper.js\r\nimport bcrypt from 'bcrypt';\r\nimport jwt from 'jsonwebtoken';\r\nimport config from './config';\r\n\r\nclass Helper {\r\n  /**\r\n   * Hash Password Method\r\n   * @param {string} password\r\n   * @returns {string} returns hashed password\r\n   */\r\n  static hashPassword(password) {\r\n    return bcrypt.hashSync(password, bcrypt.genSaltSync(8));\r\n  }\r\n  /**\r\n   * comparePassword\r\n   * @param {string} hashPassword\r\n   * @param {string} password\r\n   * @returns {Boolean} return True or False\r\n   */\r\n\r\n  static comparePassword(hashPassword, password) {\r\n    return bcrypt.compareSync(password, hashPassword);\r\n  }\r\n\r\n  /**\r\n   * Gnerate Token\r\n   * @param {string} id\r\n   * @returns {string} token\r\n   */\r\n  static generateToken(id) {\r\n    return jwt.sign({ id }, config.secret, { expiresIn: '7d' });\r\n  }\r\n}\r\n\r\nexport default Helper;\r\n"],"file":"helpers.js"}