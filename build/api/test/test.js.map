{"version":3,"sources":["../../../src/api/test/test.js"],"names":["chai","use","chaiHttp","should","describe","it","done","user","email","firstName","lastName","password","type","isAdmin","request","app","post","send","end","err","res","have","status","body","be","a","property","data","token","before","transaction","createdOn","accountNumber","cashier","amount","set","get","account","owner","balance","put"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\r\n// Import the dependencies for testing\r\nimport chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\n\r\nimport app from '../../index';\r\n\r\n// Configure chai\r\nchai.use(chaiHttp);\r\nchai.should();\r\n\r\ndescribe('Users', () => {\r\n  // Test to sign up user\r\n  it('should sign up user', (done) => {\r\n    const user = {\r\n      email: 'ahmed.musa@yahoo.com',\r\n      firstName: 'Ahmed',\r\n      lastName: 'Musa',\r\n      password: 'golden',\r\n      type: 'client',\r\n      isAdmin: 'false',\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signup')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('data');\r\n        res.body.data.should.have.property('id');\r\n        res.body.data.should.have.property('email');\r\n        res.body.data.should.have.property('password');\r\n        res.body.data.should.have.property('firstName');\r\n        res.body.data.should.have.property('lastName');\r\n        res.body.data.should.have.property('type');\r\n        res.body.data.should.have.property('isAdmin');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to check if a user exist\r\n  it('should check if user exists', (done) => {\r\n    const user = {\r\n      email: 'lawal.bello@yahoo.com',\r\n      firstName: 'Lawal',\r\n      lastName: 'Bello',\r\n      password: 'golden',\r\n      type: 'client',\r\n      isAdmin: 'false',\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signup')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        res.should.have.status(401);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('status');\r\n        res.body.should.have.property('data');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to check if user fields are passed\r\n  it('should check if user fields are passed', (done) => {\r\n    const user = {\r\n      email: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      password: '',\r\n      type: 'client',\r\n      isAdmin: false,\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signup')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        res.should.have.status(401);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('status');\r\n        res.body.should.have.property('data');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to check if correct email format is used\r\n  it('should check if correct email format is used', (done) => {\r\n    const user = {\r\n      email: 'lawaluuuu',\r\n      firstName: 'Lawal',\r\n      lastName: 'Bello',\r\n      password: 'golden',\r\n      type: 'client',\r\n      isAdmin: 'false',\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signup')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        res.should.have.status(401);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('status');\r\n        res.body.should.have.property('data');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to sign in user\r\n  it('should sign in user', (done) => {\r\n    const user = {\r\n      email: 'ola1.wale@gmail.com',\r\n      password: 'golden',\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signin')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to test for none existing emails during sign in\r\n  it('should test for none existing emails during sign in', (done) => {\r\n    const user = {\r\n      email: 'olooo.wale@gmail.com',\r\n      password: 'golden',\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signin')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        res.should.have.status(404);\r\n        res.body.should.be.a('object');\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe('Transactions', () => {\r\n  let token;\r\n\r\n  before((done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signin')\r\n      .send({ email: 'ola1.wale@gmail.com', password: 'golden' })\r\n      .end((err, res) => {\r\n        ({ token } = res.body.data);\r\n        done();\r\n      });\r\n  });\r\n  // Test to credit a user account\r\n  it('should credit a user account', (done) => {\r\n    const transaction = {\r\n      createdOn: 'Mon Feb 18 2019 09:15:03',\r\n      accountNumber: '0019898982',\r\n      cashier: 2,\r\n      amount: 10000.0,\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/transactions/0019898982/credit')\r\n      .set('Authorization', `Bearer ${token}`)\r\n      .send(transaction)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to debit a user account\r\n  it('should debit a user account', (done) => {\r\n    const transaction = {\r\n      createdOn: 'Mon Feb 18 2019 09:15:03',\r\n      accountNumber: '0019898982',\r\n      cashier: 2,\r\n      amount: 10000.0,\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/transactions/0019898982/debit')\r\n      .set('Authorization', `Bearer ${token}`)\r\n      .send(transaction)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to fetch all transactions\r\n  it('should get all transaction', (done) => {\r\n    chai\r\n      .request(app)\r\n      .get('/api/v1/transactions')\r\n      .set('Authorization', `Bearer ${token}`)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe('Accounts', () => {\r\n  let token;\r\n\r\n  before((done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signin')\r\n      .send({ email: 'ola1.wale@gmail.com', password: 'golden' })\r\n      .end((err, res) => {\r\n        ({ token } = res.body.data);\r\n        done();\r\n      });\r\n  });\r\n  // Test to create an account\r\n  it('should create an account', (done) => {\r\n    const account = {\r\n      accountNumber: '0019898982',\r\n      createdOn: 'Mon Feb 18 2019 09:15:03',\r\n      owner: 1,\r\n      type: 'savings',\r\n      status: 'active',\r\n      balance: 46888.09,\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/accounts')\r\n      .set('Authorization', `Bearer ${token}`)\r\n      .send(account)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to update account\r\n  it('should update account', (done) => {\r\n    const accountNumber = '0019898982';\r\n    const account = {\r\n      accountNumber: '0019898982',\r\n      createdOn: 'Mon Feb 18 2019 09:15:03',\r\n      owner: 1,\r\n      type: 'savings',\r\n      status: 'active',\r\n      balance: 46888.09,\r\n    };\r\n    chai\r\n      .request(app)\r\n      .put(`/api/v1/accounts/${accountNumber}`)\r\n      .set('Authorization', `Bearer ${token}`)\r\n      .send(account)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        // res.body.should.have.property('message');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to delete account\r\n  it('should delete account', (done) => {\r\n    const accountNumber = '0019898982';\r\n    chai\r\n      .request(app)\r\n      .delete(`/api/v1/accounts/${accountNumber}`)\r\n      .set('Authorization', `Bearer ${token}`)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        // res.body.should.have.property('message');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to fetch all accounts\r\n  it('should get all accounts', (done) => {\r\n    chai\r\n      .request(app)\r\n      .get('/api/v1/accounts')\r\n      .set('Authorization', `Bearer ${token}`)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to fetch an account\r\n  it('should get an account', (done) => {\r\n    chai\r\n      .request(app)\r\n      .get('/api/v1/accounts/0019898982')\r\n      .set('Authorization', `Bearer ${token}`)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        done();\r\n      });\r\n  });\r\n});\r\n"],"file":"test.js"}