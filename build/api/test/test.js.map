{"version":3,"sources":["../../../src/api/test/test.js"],"names":["chai","use","chaiHttp","should","describe","it","done","user","email","domain","firstName","lastName","password","type","isAdmin","request","app","post","send","end","err","res","have","status","body","be","a","property","data"],"mappings":"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":["/* eslint-disable import/no-extraneous-dependencies */\r\n// Import the dependencies for testing\r\nimport chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport randMail from 'random-email';\r\n\r\nimport app from '../../index';\r\n\r\n// Configure chai\r\nchai.use(chaiHttp);\r\nchai.should();\r\n\r\ndescribe('Users', () => {\r\n  // Test to sign up user\r\n  it('should sign up user', (done) => {\r\n    const user = {\r\n      email: randMail({ domain: 'banka.com' }),\r\n      firstName: 'Ahmed',\r\n      lastName: 'Musa',\r\n      password: 'golden',\r\n      type: 'client',\r\n      isAdmin: false,\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signup')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        res.should.have.status(201);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('data');\r\n        res.body.data.should.have.property('id');\r\n        res.body.data.should.have.property('email');\r\n        res.body.data.should.have.property('password');\r\n        res.body.data.should.have.property('firstname');\r\n        res.body.data.should.have.property('lastname');\r\n        res.body.data.should.have.property('type');\r\n        res.body.data.should.have.property('isadmin');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to check if a user exist - sign up\r\n  it('should check if user exists', (done) => {\r\n    const user = {\r\n      email: 'ahmed2ccc.musa@yahoo.com',\r\n      firstName: 'Lawal',\r\n      lastName: 'Bello',\r\n      password: 'golden',\r\n      type: 'client',\r\n      isAdmin: 'false',\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signup')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        res.should.have.status(401);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('status');\r\n        res.body.should.have.property('data');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to check if user fields are passed - sign up\r\n  it('should check if user fields are passed', (done) => {\r\n    const user = {\r\n      email: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      password: '',\r\n      type: 'client',\r\n      isAdmin: false,\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signup')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        res.should.have.status(401);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('status');\r\n        res.body.should.have.property('data');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to check if correct email format is used - sign up\r\n  it('should check if correct email format is used', (done) => {\r\n    const user = {\r\n      email: 'lawaluuuu',\r\n      firstName: 'Lawal',\r\n      lastName: 'Bello',\r\n      password: 'golden',\r\n      type: 'client',\r\n      isAdmin: 'false',\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signup')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        res.should.have.status(401);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('status');\r\n        res.body.should.have.property('data');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to sign in user\r\n  it('should sign in user', (done) => {\r\n    const user = {\r\n      email: 'ahmed2.musa@yahoo.com',\r\n      password: 'golden',\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signin')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        res.should.have.status(201);\r\n        res.body.should.be.a('object');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to test for none existing emails during sign in\r\n  it('should test for none existing emails during sign in', (done) => {\r\n    const user = {\r\n      email: 'oloooo.wale@gmail.com',\r\n      password: 'golden',\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signin')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        res.should.have.status(404);\r\n        res.body.should.be.a('object');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to test for wrong passwords\r\n  it('should test for wrong passwords', (done) => {\r\n    const user = {\r\n      email: 'ahmed2.musa@yahoo.com',\r\n      password: 'goldenBoy1x',\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signin')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        res.should.have.status(404);\r\n        res.body.should.be.a('object');\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test to test for wrong email format or empty fields - sign in\r\n  it('should test for wrong email format or empty fields', (done) => {\r\n    const user = {\r\n      email: 'ahmed.muhoo.com',\r\n      password: 'goldenBoy1x',\r\n    };\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/users/auth/signin')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        res.should.have.status(401);\r\n        res.body.should.be.a('object');\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n// describe('Transactions', () => {\r\n//   let token;\r\n\r\n//   before((done) => {\r\n//     chai\r\n//       .request(app)\r\n//       .post('/api/v1/users/auth/signin')\r\n//       .send({ email: 'ola1.wale@gmail.com', password: 'golden' })\r\n//       .end((err, res) => {\r\n//         ({ token } = res.body.data);\r\n//         done();\r\n//       });\r\n//   });\r\n//   // Test to credit a user account\r\n//   it('should credit a user account', (done) => {\r\n//     const transaction = {\r\n//       createdOn: 'Mon Feb 18 2019 09:15:03',\r\n//       accountNumber: '0019898982',\r\n//       cashier: 2,\r\n//       amount: 10000.0,\r\n//     };\r\n//     chai\r\n//       .request(app)\r\n//       .post('/api/v1/transactions/0019898982/credit')\r\n//       .set('Authorization', `Bearer ${token}`)\r\n//       .send(transaction)\r\n//       .end((err, res) => {\r\n//         res.should.have.status(200);\r\n//         res.body.should.be.a('object');\r\n//         done();\r\n//       });\r\n//   });\r\n\r\n//   // Test to debit a user account\r\n//   it('should debit a user account', (done) => {\r\n//     const transaction = {\r\n//       createdOn: 'Mon Feb 18 2019 09:15:03',\r\n//       accountNumber: '0019898982',\r\n//       cashier: 2,\r\n//       amount: 10000.0,\r\n//     };\r\n//     chai\r\n//       .request(app)\r\n//       .post('/api/v1/transactions/0019898982/debit')\r\n//       .set('Authorization', `Bearer ${token}`)\r\n//       .send(transaction)\r\n//       .end((err, res) => {\r\n//         res.should.have.status(200);\r\n//         res.body.should.be.a('object');\r\n//         done();\r\n//       });\r\n//   });\r\n\r\n//   // Test to fetch all transactions\r\n//   it('should get all transaction', (done) => {\r\n//     chai\r\n//       .request(app)\r\n//       .get('/api/v1/transactions')\r\n//       .set('Authorization', `Bearer ${token}`)\r\n//       .end((err, res) => {\r\n//         res.should.have.status(200);\r\n//         res.body.should.be.a('object');\r\n//         done();\r\n//       });\r\n//   });\r\n// });\r\n\r\n// describe('Accounts', () => {\r\n//   let token;\r\n\r\n//   before((done) => {\r\n//     chai\r\n//       .request(app)\r\n//       .post('/api/v1/users/auth/signin')\r\n//       .send({ email: 'ola1.wale@gmail.com', password: 'golden' })\r\n//       .end((err, res) => {\r\n//         ({ token } = res.body.data);\r\n//         done();\r\n//       });\r\n//   });\r\n//   // Test to create an account\r\n//   it('should create an account', (done) => {\r\n//     const account = {\r\n//       accountNumber: '0019898982',\r\n//       createdOn: 'Mon Feb 18 2019 09:15:03',\r\n//       owner: 1,\r\n//       type: 'savings',\r\n//       status: 'active',\r\n//       balance: 46888.09,\r\n//     };\r\n//     chai\r\n//       .request(app)\r\n//       .post('/api/v1/accounts')\r\n//       .set('Authorization', `Bearer ${token}`)\r\n//       .send(account)\r\n//       .end((err, res) => {\r\n//         res.should.have.status(200);\r\n//         res.body.should.be.a('object');\r\n//         done();\r\n//       });\r\n//   });\r\n\r\n//   // Test to update account\r\n//   it('should update account', (done) => {\r\n//     const accountNumber = '0019898982';\r\n//     const account = {\r\n//       accountNumber: '0019898982',\r\n//       createdOn: 'Mon Feb 18 2019 09:15:03',\r\n//       owner: 1,\r\n//       type: 'savings',\r\n//       status: 'active',\r\n//       balance: 46888.09,\r\n//     };\r\n//     chai\r\n//       .request(app)\r\n//       .put(`/api/v1/accounts/${accountNumber}`)\r\n//       .set('Authorization', `Bearer ${token}`)\r\n//       .send(account)\r\n//       .end((err, res) => {\r\n//         res.should.have.status(200);\r\n//         res.body.should.be.a('object');\r\n//         // res.body.should.have.property('message');\r\n//         done();\r\n//       });\r\n//   });\r\n\r\n//   // Test to delete account\r\n//   it('should delete account', (done) => {\r\n//     const accountNumber = '0019898982';\r\n//     chai\r\n//       .request(app)\r\n//       .delete(`/api/v1/accounts/${accountNumber}`)\r\n//       .set('Authorization', `Bearer ${token}`)\r\n//       .end((err, res) => {\r\n//         res.should.have.status(200);\r\n//         res.body.should.be.a('object');\r\n//         // res.body.should.have.property('message');\r\n//         done();\r\n//       });\r\n//   });\r\n\r\n//   // Test to fetch all accounts\r\n//   it('should get all accounts', (done) => {\r\n//     chai\r\n//       .request(app)\r\n//       .get('/api/v1/accounts')\r\n//       .set('Authorization', `Bearer ${token}`)\r\n//       .end((err, res) => {\r\n//         res.should.have.status(200);\r\n//         res.body.should.be.a('object');\r\n//         done();\r\n//       });\r\n//   });\r\n\r\n//   // Test to fetch an account\r\n//   it('should get an account', (done) => {\r\n//     chai\r\n//       .request(app)\r\n//       .get('/api/v1/accounts/0019898982')\r\n//       .set('Authorization', `Bearer ${token}`)\r\n//       .end((err, res) => {\r\n//         res.should.have.status(200);\r\n//         res.body.should.be.a('object');\r\n//         done();\r\n//       });\r\n//   });\r\n// });\r\n"],"file":"test.js"}