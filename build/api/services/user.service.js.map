{"version":3,"sources":["../../../src/api/services/user.service.js"],"names":["connectionString","pool","Pool","UserService","addNewUser","user","connect","client","createQuery","values","email","firstName","lastName","password","type","isAdmin","Date","query","createdUser","end","userLogIn","loggeUser"],"mappings":";;;;;;;;;;;;;AACA;;AACA;;AACA;;AAHA;AAKA,IAAMA,gBAAgB,GAAG,mDAAzB;AAEA,IAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAS;AACpBF,EAAAA,gBAAgB,EAAhBA;AADoB,CAAT,CAAb;AAIA,IAAMG,WAAW,GAAG;AACZC,EAAAA,UADY;AAAA;AAAA;AAAA,kDACDC,IADC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEKJ,IAAI,CAACK,OAAL,EAFL;;AAAA;AAEVC,cAAAA,MAFU;AAGVC,cAAAA,WAHU;AAOVC,cAAAA,MAPU,GAOD,CACb,oBADa,EAEbJ,IAAI,CAACK,KAFQ,EAGbL,IAAI,CAACM,SAHQ,EAIbN,IAAI,CAACO,QAJQ,EAKbP,IAAI,CAACQ,QALQ,EAMbR,IAAI,CAACS,IANQ,EAObT,IAAI,CAACU,OAPQ,EAQb,wBAAO,IAAIC,IAAJ,EAAP,CARa,EASb,wBAAO,IAAIA,IAAJ,EAAP,CATa,CAPC;AAAA;AAAA;AAAA,qBAmBYT,MAAM,CAACU,KAAP,CAAaT,WAAb,EAA0BC,MAA1B,CAnBZ;;AAAA;AAmBRS,cAAAA,WAnBQ;AAAA,+CAoBPA,WApBO;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAwBdX,cAAAA,MAAM,CAACY,GAAP;AAxBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA2BZC,EAAAA,SA3BY;AAAA;AAAA;AAAA,mDA2BFV,KA3BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA4BKT,IAAI,CAACK,OAAL,EA5BL;;AAAA;AA4BVC,cAAAA,MA5BU;AA6BVC,cAAAA,WA7BU,GA6BI,sCA7BJ;AAAA;AAAA;AAAA,qBA+BUD,MAAM,CAACU,KAAP,CAAaT,WAAb,EAA0B,CAACE,KAAD,CAA1B,CA/BV;;AAAA;AA+BRW,cAAAA,SA/BQ;AAAA,gDAgCPA,SAhCO;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoCdd,cAAAA,MAAM,CAACY,GAAP;AApCc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAApB;eAyCehB,W","sourcesContent":["/* eslint-disable no-console */\r\nimport { Pool } from 'pg';\r\nimport uuidv4 from 'uuid/v4';\r\nimport moment from 'moment';\r\n\r\nconst connectionString = 'postgresql://postgres:admins@127.0.0.1:5432/banka';\r\n\r\nconst pool = new Pool({\r\n  connectionString,\r\n});\r\n\r\nconst UserService = {\r\n  async addNewUser(user) {\r\n    const client = await pool.connect();\r\n    const createQuery = `INSERT INTO\r\n      users(id, email, firstname, lastname, password, type, isadmin, createdon, last_login)\r\n      VALUES($1, $2, $3, $4, $5, $6, $7, $8, $9)\r\n      returning *`;\r\n    const values = [\r\n      uuidv4(),\r\n      user.email,\r\n      user.firstName,\r\n      user.lastName,\r\n      user.password,\r\n      user.type,\r\n      user.isAdmin,\r\n      moment(new Date()),\r\n      moment(new Date()),\r\n    ];\r\n    try {\r\n      const createdUser = await client.query(createQuery, values);\r\n      return createdUser;\r\n    } catch (err) {\r\n      return err;\r\n    } finally {\r\n      client.end();\r\n    }\r\n  },\r\n  async userLogIn(email) {\r\n    const client = await pool.connect();\r\n    const createQuery = 'SELECT * FROM users WHERE email = $1';\r\n    try {\r\n      const loggeUser = await client.query(createQuery, [email]);\r\n      return loggeUser;\r\n    } catch (err) {\r\n      return err;\r\n    } finally {\r\n      client.end();\r\n    }\r\n  },\r\n};\r\n\r\nexport default UserService;\r\n"],"file":"user.service.js"}