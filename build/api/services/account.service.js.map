{"version":3,"sources":["../../../src/api/services/account.service.js"],"names":["AccountService","addNewAccount","account","accountObj","accountLenght","dummyData","accounts","length","accountOwner","users","find","user","id","owner","firstName","lastName","email","push","updateAnAccount","accountNumber","accountInDb","acc","accountObjIndex","findIndex","updatedAcct","createdOn","type","status","balance","deleteAnAccount","getAccountIndex","splice"],"mappings":";;;;;;;AAEA;;;;AAFA;;AACA;AAGA,IAAMA,cAAc,GAAG;AACrBC,EAAAA,aADqB,yBACPC,OADO,EACE;AACrB,QAAMC,UAAU,GAAGD,OAAnB;AACA,QAAME,aAAa,GAAGC,sBAAUC,QAAV,CAAmBC,MAAzC;;AACA,QAAMC,YAAY,GAAGH,sBAAUI,KAAV,CAAgBC,IAAhB,CAAqB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAL,KAAYT,UAAU,CAACU,KAA3B;AAAA,KAAzB,CAArB;;AACAV,IAAAA,UAAU,CAACS,EAAX,GAAgBP,sBAAUC,QAAV,CAAmBF,aAAa,GAAG,CAAnC,EAAsCQ,EAAtC,GAA2C,CAA3D;AACAT,IAAAA,UAAU,CAACW,SAAX,GAAuBN,YAAY,CAACM,SAApC;AACAX,IAAAA,UAAU,CAACY,QAAX,GAAsBP,YAAY,CAACO,QAAnC;AACAZ,IAAAA,UAAU,CAACa,KAAX,GAAmBR,YAAY,CAACQ,KAAhC;;AACAX,0BAAUC,QAAV,CAAmBW,IAAnB,CAAwBd,UAAxB;;AACA,WAAOA,UAAP;AACD,GAXoB;AAarBe,EAAAA,eAbqB,2BAaLhB,OAbK,EAaIiB,aAbJ,EAamB;AACtC,QAAMhB,UAAU,GAAGD,OAAnB;;AACA,QAAMkB,WAAW,GAAGf,sBAAUC,QAAV,CAAmBI,IAAnB,CAAwB,UAAAW,GAAG;AAAA,aAAIA,GAAG,CAACF,aAAJ,KAAsBhB,UAAU,CAACgB,aAArC;AAAA,KAA3B,CAApB;;AACA,QAAMG,eAAe,GAAGjB,sBAAUC,QAAV,CAAmBiB,SAAnB,CAA6B,UAAAjB,QAAQ;AAAA,aAAIA,QAAQ,CAACa,aAAT,KAA2BA,aAA/B;AAAA,KAArC,CAAxB;;AACA,QAAMX,YAAY,GAAGH,sBAAUI,KAAV,CAAgBC,IAAhB,CAAqB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAL,KAAYT,UAAU,CAACU,KAA3B;AAAA,KAAzB,CAArB;;AACA,QAAMW,WAAW,GAAG;AAClBL,MAAAA,aAAa,EAAEC,WAAW,CAACD,aADT;AAElBM,MAAAA,SAAS,EAAEL,WAAW,CAACK,SAFL;AAGlBZ,MAAAA,KAAK,EAAEO,WAAW,CAACP,KAHD;AAIlBa,MAAAA,IAAI,EAAEvB,UAAU,CAACuB,IAAX,IAAmBN,WAAW,CAACM,IAJnB;AAKlBC,MAAAA,MAAM,EAAExB,UAAU,CAACwB,MAAX,IAAqBP,WAAW,CAACO,MALvB;AAMlBC,MAAAA,OAAO,EAAEzB,UAAU,CAACyB,OAAX,IAAsBR,WAAW,CAACQ,OANzB;AAOlBhB,MAAAA,EAAE,EAAEQ,WAAW,CAACR;AAPE,KAApB;AASAY,IAAAA,WAAW,CAACV,SAAZ,GAAwBN,YAAY,CAACM,SAArC;AACAU,IAAAA,WAAW,CAACT,QAAZ,GAAuBP,YAAY,CAACO,QAApC;AACAS,IAAAA,WAAW,CAACR,KAAZ,GAAoBR,YAAY,CAACQ,KAAjC;AACAQ,IAAAA,WAAW,CAACL,aAAZ,GAA4BA,aAA5B;AACAd,0BAAUC,QAAV,CAAmBgB,eAAnB,IAAsCE,WAAtC;AACA,WAAOA,WAAP;AACD,GAjCoB;AAmCrBK,EAAAA,eAnCqB,2BAmCLV,aAnCK,EAmCU;AAC7B,QAAMW,eAAe,GAAGzB,sBAAUC,QAAV,CAAmBiB,SAAnB,CAA6B,UAAArB,OAAO;AAAA,aAAIA,OAAO,CAACiB,aAAR,KAA0BA,aAA9B;AAAA,KAApC,CAAxB;;AACAd,0BAAUC,QAAV,CAAmByB,MAAnB,CAA0BD,eAA1B,EAA2C,CAA3C;AACD;AAtCoB,CAAvB;eAyCe9B,c","sourcesContent":["/* eslint-disable max-len */\r\n/* eslint-disable radix */\r\nimport dummyData from '../utilz/dummyData';\r\n\r\nconst AccountService = {\r\n  addNewAccount(account) {\r\n    const accountObj = account;\r\n    const accountLenght = dummyData.accounts.length;\r\n    const accountOwner = dummyData.users.find(user => user.id === accountObj.owner);\r\n    accountObj.id = dummyData.accounts[accountLenght - 1].id + 1;\r\n    accountObj.firstName = accountOwner.firstName;\r\n    accountObj.lastName = accountOwner.lastName;\r\n    accountObj.email = accountOwner.email;\r\n    dummyData.accounts.push(accountObj);\r\n    return accountObj;\r\n  },\r\n\r\n  updateAnAccount(account, accountNumber) {\r\n    const accountObj = account;\r\n    const accountInDb = dummyData.accounts.find(acc => acc.accountNumber === accountObj.accountNumber);\r\n    const accountObjIndex = dummyData.accounts.findIndex(accounts => accounts.accountNumber === accountNumber);\r\n    const accountOwner = dummyData.users.find(user => user.id === accountObj.owner);\r\n    const updatedAcct = {\r\n      accountNumber: accountInDb.accountNumber,\r\n      createdOn: accountInDb.createdOn,\r\n      owner: accountInDb.owner,\r\n      type: accountObj.type || accountInDb.type,\r\n      status: accountObj.status || accountInDb.status,\r\n      balance: accountObj.balance || accountInDb.balance,\r\n      id: accountInDb.id,\r\n    };\r\n    updatedAcct.firstName = accountOwner.firstName;\r\n    updatedAcct.lastName = accountOwner.lastName;\r\n    updatedAcct.email = accountOwner.email;\r\n    updatedAcct.accountNumber = accountNumber;\r\n    dummyData.accounts[accountObjIndex] = updatedAcct;\r\n    return updatedAcct;\r\n  },\r\n\r\n  deleteAnAccount(accountNumber) {\r\n    const getAccountIndex = dummyData.accounts.findIndex(account => account.accountNumber === accountNumber);\r\n    dummyData.accounts.splice(getAccountIndex, 1);\r\n  },\r\n};\r\n\r\nexport default AccountService;\r\n"],"file":"account.service.js"}